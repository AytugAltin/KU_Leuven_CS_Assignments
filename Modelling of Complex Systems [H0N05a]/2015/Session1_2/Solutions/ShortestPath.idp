 vocabulary V{
   type Node
   Edge(Node,Node)
   EdgeOnPath(Node,Node)
   Start:Node
   End:Node

   //Extra symbols if needed

   Reach(Node)
 }

theory PathTheory:V{
	//Theory expressing that EdgeOnPath is a Path
	!x: #{y: EdgeOnPath(x,y)}<2.
	!y: #{x: EdgeOnPath(x,y)}<2.

	{
		Reach(Start).
		! x y: Reach(x) <- Reach(y) & EdgeOnPath(y, x).
	}
	Reach(End).
	
	~?y: EdgeOnPath(End,y).
	~?x: EdgeOnPath(x, Start).
	! x y: EdgeOnPath(x,y) => Edge(x,y).

	
}

term Length:V{
	#{x y : EdgeOnPath(x,y)}
}


structure S:V{
	Node = {1..5}
	Edge= {1,2;2,3;3,4;4,5;5,2;5,1;4,2;2,5;}
	Start = 1
	End = 5
}

include <mx> 

procedure main(){
	stdoptions.nbmodels=0
	printmodels(minimize(PathTheory,S,Length))
}
